{"remainingRequest":"C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\src\\views\\index.vue?vue&type=template&id=a83bd3b0&scoped=true&","dependencies":[{"path":"C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\src\\views\\index.vue","mtime":1675233590000},{"path":"C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
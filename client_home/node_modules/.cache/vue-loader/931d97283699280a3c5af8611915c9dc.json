{"remainingRequest":"C:\\Users\\胡运宽\\Desktop\\springboot-new\\client_home\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\胡运宽\\Desktop\\springboot-new\\client_home\\src\\components\\diy\\div_food_information.vue?vue&type=template&id=1fc3ec20&","dependencies":[{"path":"C:\\Users\\胡运宽\\Desktop\\springboot-new\\client_home\\src\\components\\diy\\div_food_information.vue","mtime":1729939539233},{"path":"C:\\Users\\胡运宽\\Desktop\\springboot-new\\client_home\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\胡运宽\\Desktop\\springboot-new\\client_home\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\胡运宽\\Desktop\\springboot-new\\client_home\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\胡运宽\\Desktop\\springboot-new\\client_home\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
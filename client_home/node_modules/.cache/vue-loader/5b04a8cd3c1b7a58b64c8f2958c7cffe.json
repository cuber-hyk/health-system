{"remainingRequest":"C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\src\\views\\order\\list.vue?vue&type=style&index=0&id=96626e4e&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\src\\views\\order\\list.vue","mtime":1675233590000},{"path":"C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bishe\\Desktop\\springboot专利管理系统[编号：CS781820_20220828094342] (4)\\client_home\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoucGFnZV9vcmRlciB7DQogIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7DQogIG1pbi1oZWlnaHQ6IDEwMHZoOw0KfQ0KLmZpbHRlcl9ibG9jayB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGZsZXgtZGlyZWN0aW9uOiByb3c7DQogIGp1c3RpZnktY29udGVudDogc3RhcnQ7DQogIG1hcmdpbi1ib3R0b206IDEwcHg7DQp9DQouYmFyX2ZpbHRlciB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQp9DQpsaSB7DQogIGxpc3Qtc3R5bGU6IG5vbmU7DQp9DQouYmFyX3NvcnQgew0KICBtYXJnaW4tbGVmdDogNXB4Ow0KfQ0K"},{"version":3,"sources":["list.vue"],"names":[],"mappings":";AAiMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/views/order","sourcesContent":["<template>\r\n  <div class=\"page_order\" id=\"order_list\">\r\n    <div class=\"warp\" v-if=\"$check_action('/order/list', 'get')\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-10\">\r\n            <div class=\"card_goods_list\">\r\n              <h4>我的订单</h4>\r\n              <div class=\"filter_block\">\r\n                <!-- 排序 -->\r\n                <div\r\n                  class=\"bar_sort\"\r\n                  :class=\"{ active: query.orderby == '`price` desc' }\"\r\n                >\r\n                  <b-dropdown text=\"排序\" variant=\"outline-dark\" left>\r\n                    <b-dropdown-item @click=\"sort_order_desc()\">\r\n                      价格从高到低\r\n                    </b-dropdown-item>\r\n                    <b-dropdown-item @click=\"sort_order_asc()\">\r\n                      价格从低到高\r\n                    </b-dropdown-item>\r\n                    <b-dropdown-item\r\n                      v-for=\"(o, i) in sort_list\"\r\n                      :key=\"i\"\r\n                      @click=\"sort_order(o)\"\r\n                    >\r\n                      {{ o.name }}\r\n                    </b-dropdown-item>\r\n                  </b-dropdown>\r\n                </div>\r\n                <!-- /排序 -->\r\n                <!-- 订单状态筛选 -->\r\n                <div\r\n                  class=\"bar_sort\"\r\n                  :class=\"{ active: query.orderby == '`price` desc' }\"\r\n                >\r\n                  <b-dropdown text=\"订单状态\" variant=\"outline-dark\" left>\r\n                    <b-dropdown-item\r\n                      v-for=\"(o, i) in state_list\"\r\n                      :key=\"i\"\r\n                      @click=\"state_filter(o)\"\r\n                    >\r\n                      {{ o }}\r\n                    </b-dropdown-item>\r\n                  </b-dropdown>\r\n                </div>\r\n                <!-- /订单状态筛选 -->\r\n              </div>\r\n              <list_order :list=\"list_diff\"></list_order>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport list_order from \"@/components/diy/list_order.vue\";\r\nimport mixin from \"@/mixins/page.js\";\r\n\r\nexport default {\r\n  mixins: [mixin],\r\n  components: {\r\n    list_order,\r\n  },\r\n  data() {\r\n    return {\r\n      // 登录权限\r\n      oauth: {\r\n        signIn: true,\r\n        user_group: [],\r\n      },\r\n      url_get_list: \"~/api/order/get_list\",\r\n      list_diff: [],\r\n      query: {\r\n        user_id: this.$store.state.user.user_id,\r\n      },\r\n      list_order_type: [],\r\n      sort_list: [\r\n        {\r\n          name: \"更新时间从高到低\",\r\n          value: \"`create_time` desc\",\r\n        },\r\n        {\r\n          name: \"更新时间从低到高\",\r\n          value: \"`create_time` asc\",\r\n        },\r\n      ],\r\n      state_list: [\r\n        \"全部\",\r\n        \"待付款\",\r\n        \"已付款\",\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    /**\r\n     *下拉排序选择\r\n     */\r\n    sort_order(o) {\r\n      this.query.orderby = o.value;\r\n      this.search();\r\n    },\r\n    /**\r\n     *订单状态筛选\r\n     */\r\n    state_filter(o) {\r\n      if (o == \"全部\") {\r\n        this.query.state = \"\";\r\n      } else {\r\n        this.query.state = o;\r\n      }\r\n      this.get_list();\r\n    },\r\n    /**\r\n     * 从低到高排序\r\n     */\r\n    compare_asc(property) {\r\n      return function (a, b) {\r\n        var value1 = a[property];\r\n        var value2 = b[property];\r\n        return value1 - value2;\r\n      };\r\n    },\r\n    /**\r\n     * 从高到低排序\r\n     */\r\n    compare_desc(property) {\r\n      return function (a, b) {\r\n        var value1 = a[property];\r\n        var value2 = b[property];\r\n        return value2 - value1;\r\n      };\r\n    },\r\n    /**\r\n     * 订单从低到高排序\r\n     */\r\n    sort_order_asc() {\r\n      this.list_diff.sort(this.compare_asc(\"sum_price\"));\r\n    },\r\n    /**\r\n     * 订单从高到低排序\r\n     */\r\n    sort_order_desc() {\r\n      this.list_diff.sort(this.compare_desc(\"sum_price\"));\r\n    },\r\n    /**\r\n     *获取订单前\r\n     @param { Object } param 用户user_id\r\n     */\r\n    get_list_before(param) {\r\n      param.user_id = this.$store.state.user.user_id;\r\n      return param;\r\n      for (let index = 0; index < array.length; index++) {\r\n        const element = array[index];\r\n      }\r\n    },\r\n    /**\r\n     * 获订单后\r\n     * @param {Object} json 响应对象\r\n     * @return { Object } 订单对象\r\n     */\r\n    get_list_after(json) {\r\n      // 根据订单号区分列表\r\n      var list_diff = [];\r\n      var order_num = \"\";\r\n      var index = -1;\r\n      json.result.list.map((o) => {\r\n        if (o.order_number === order_num) {\r\n          list_diff[index][\"list\"].push(o);\r\n          list_diff[index][\"sum_price\"] += o.price_count;\r\n        } else {\r\n          index += 1;\r\n          order_num = o.order_number;\r\n          list_diff[index] = {};\r\n          var obj_diff = list_diff[index];\r\n          obj_diff[\"create_time\"] = o.create_time;\r\n          obj_diff[\"order_number\"] = order_num;\r\n          obj_diff[\"list\"] = [];\r\n          obj_diff[\"list\"].push(o);\r\n          obj_diff[\"sum_price\"] = o.price_count;\r\n          obj_diff[\"state\"] = o.state;\r\n        }\r\n      });\r\n      this.list_diff = list_diff;\r\n      return json;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.page_order {\r\n  background-color: #f8f8f8;\r\n  min-height: 100vh;\r\n}\r\n.filter_block {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: start;\r\n  margin-bottom: 10px;\r\n}\r\n.bar_filter {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\nli {\r\n  list-style: none;\r\n}\r\n.bar_sort {\r\n  margin-left: 5px;\r\n}\r\n</style>\r\n"]}]}
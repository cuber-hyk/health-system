{"remainingRequest":"G:\\weixinback\\wxid_5488mcc1cgih21\\WeChat Files\\wxid_5488mcc1cgih21\\FileStorage\\File\\2022-12\\client_home\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\weixinback\\wxid_5488mcc1cgih21\\WeChat Files\\wxid_5488mcc1cgih21\\FileStorage\\File\\2022-12\\client_home\\src\\views\\article\\details.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\weixinback\\wxid_5488mcc1cgih21\\WeChat Files\\wxid_5488mcc1cgih21\\FileStorage\\File\\2022-12\\client_home\\src\\views\\article\\details.vue","mtime":1657768166000},{"path":"G:\\weixinback\\wxid_5488mcc1cgih21\\WeChat Files\\wxid_5488mcc1cgih21\\FileStorage\\File\\2022-12\\client_home\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\weixinback\\wxid_5488mcc1cgih21\\WeChat Files\\wxid_5488mcc1cgih21\\FileStorage\\File\\2022-12\\client_home\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"G:\\weixinback\\wxid_5488mcc1cgih21\\WeChat Files\\wxid_5488mcc1cgih21\\FileStorage\\File\\2022-12\\client_home\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\weixinback\\wxid_5488mcc1cgih21\\WeChat Files\\wxid_5488mcc1cgih21\\FileStorage\\File\\2022-12\\client_home\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["details.vue"],"names":[],"mappingsfile":"details.vue","sourceRoot":"src/views/article","sourcesContent":["<template>\n    <div class=\"page_article\">\n        <div class=\"warp\" v-if=\"$check_action('/article/list', 'get')\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-lg-9 col-md-12\">\n                        <div class=\"card\">\n                            <!-- 文章详情 -->\n                            <div class=\"article_detail\">\n                                <div_article :obj=\"obj\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-lg-3\">\n                          <!-- 热门文章推荐 -->\n                          <div class=\"list_hot\">\n                              <div class=\"hot_title\">\n                                  热门文章推荐\n                              </div>\n                              <list_article_hot :list=\"list_hot\"/>\n                          </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"comments-wrap warp\" v-if=\"$check_action('/comment/list', 'get')\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <!-- 评论区 -->\n                    <div class=\"col\">\n                        <bar_title class=\"mt\" title=\"评论区\"/>\n                        <div class=\"comment_box\">\n                            <list_comment\n                                    class=\"w-100\"\n                                    :list=\"list_comment\"\n                                    :obj=\"form_comment\"\n                            />\n                            <b-pagination-nav\n                                    :base-url=\"$route.path\"\n                                    :number-of-pages=\"count_pages\"\n                                    :link-gen=\"link_gen\"\n                                    @change=\"change_page\"\n                                    first-number\n                                    last-number\n                            />\n                        </div>\n\n                        <!-- 发表评论 -->\n                        <div class=\"form_editor\">\n                            <div class=\"fl ml-3\" v-show=\"form_comment.reply_to_id\">\n                                对 <i>{{ respondent }}</i> 回复\n                            </div>\n                            <div class=\"fr mr-3\" v-show=\"form_comment.reply_to_id\">\n                                <b-button\n                                        variant=\"outline-primary\"\n                                        size=\"sm\"\n                                        @click=\"form_comment.reply_to_id = 0\"\n                                >重置回复人\n                                </b-button\n                                >\n                            </div>\n                            <form_editor\n                                    class=\"fn\"\n                                    :form=\"form_comment\"\n                                    @update_comment=\"update_comment\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import mixin from \"@/mixins/page.js\";\n    import bar_title from \"@/components/diy/bar_title.vue\";\n    import div_article from \"@/components/diy/div_article.vue\";\n    import list_article_hot from \"@/components/diy/list_article_hot.vue\";\n    import list_comment from \"@/components/diy/list_comment.vue\";\n    import form_editor from \"@/components/diy/form_editor.vue\";\n\n    export default {\n        mixins: [mixin],\n        components: {\n            list_comment,\n            div_article,\n            list_article_hot,\n            bar_title,\n            form_editor,\n        },\n        data() {\n            return {\n                url_get_obj: \"~/api/article/get_obj?\",\n                field: \"article_id\",\n                obj: {},\n                query: {\n                    article_id: 0,\n                },\n                list_hot: [],\n                list_comment: [],\n                form_comment: {\n                    source_table: \"article\",\n                    source_field: \"article_id\",\n                    source_id: 0,\n                    reply_to_id: 0,\n                },\n                count_pages: 1, // 页面数\n                seted_count_pages: true, // 是否设置过\n            };\n        },\n        methods: {\n            /**\n             * 获取评论后\n             * @param {Object} json 响应对象\n             */\n            get_obj_after(json) {\n                this.form_comment.source_id = this.query.article_id;\n            },\n            /**\n             * 获取热门文章\n             */\n            get_hot_article() {\n                this.$get(\n                    \"~/api/article/get_list\",\n                    {\n                        page: 1,\n                        size: 10,\n                        orderby: \"hits\",\n                    },\n                    (res) => {\n                        if (res.result) {\n                            this.list_hot = res.result.list;\n                        }\n                    }\n                );\n            },\n            /**\n             * 获取评论\n             * @param { Object } obj 文章对象\n             * @param { Number } page 分页数\n             * @param { Number } size 评论显示条数\n             */\n            get_comment(obj,page = 1, size = 5) {\n                this.$get(\n                    \"~/api/comment/get_list?\",\n                    {\n                        source_table: \"article\",\n                        source_field: \"article_id\",\n                        source_id: this.obj.article_id,\n                        page,\n                        size,\n                        reply_to_id: \"0\",\n                        orderby: \"create_time desc\",\n                    },\n                    (json) => {\n                        if (json.result) {\n                            var list_comment = json.result.list;\n                            list_comment.map((o) => {\n                                o.list_reply = [];\n                            });\n                            this.add_reply(list_comment).then((list) => {\n                                this.list_comment = list;\n                            });\n                            // 分页器\n                            // if (this.seted_count_pages) {\n                            //   this.seted_count_pages = false;\n                            //   this.count_pages = Math.ceil(json.result.count / size);\n                            // }\n                            this.count_pages = Math.ceil(json.result.count / size) || 1\n                        }\n                    }\n                );\n            },\n\n            /**\n             * @param { Array } list 评论列表\n             * 添加回复到评论列表\n             */\n            add_reply(list) {\n                return new Promise((resolve) => {\n                    for (let idx = 0; idx < list.length; idx++) {\n                        const obj = list[idx];\n                        this.$get(\n                            \"~/api/comment/get_list?\",\n                            {\n                                source_table: \"article\",\n                                source_field: \"article_id\",\n                                source_id: obj.article_id,\n                                orderby: \"create_time desc\",\n                                reply_to_id: obj.comment_id,\n                            },\n                            (res) => {\n                                if (res.result) {\n                                    obj.list_reply = res.result.list;\n                                }\n                            }\n                        );\n                    }\n                    resolve(list);\n                });\n            },\n\n            /**\n             * 更新评论\n             */\n            update_comment() {\n                this.get_comment(this.obj);\n            },\n            /**\n             * 分页器\n             * @param { Number } page_num 分页数\n             * @return { Object } 查询对象\n             */\n            link_gen(page_num) {\n                return {\n                    query: this.query,\n                };\n            },\n            /**\n             *加载下一页\n             */\n            change_page(page_num) {\n                this.get_comment(this.obj, page_num);\n                this.form_comment.reply_to_id = 0;\n            },\n            /**\n             * 获取对象之后\n             * @param {Object} json 结果对象\n             */\n            get_obj_after(json) {\n              let obj = json.result.obj;\n              this.add_hits(obj)\n              this.get_comment(obj);\n              this.form_comment.source_id = obj.article_id;\n            },\n            /**\n             * 添加访问量\n             */\n            add_hits(obj) {\n              this.$post('~/api/article/set?article_id=' + obj.article_id, {\n                hits: parseInt(obj.hits) + 1\n              }, res => {\n                obj.hits =parseInt(obj.hits)+ 1\n                console.log(res);\n              })\n            }\n        },\n        computed: {\n            respondent() {\n                var reply_to_id = this.form_comment.reply_to_id;\n                var respondent = \"\";\n                this.list_comment.map((o) => {\n                    if (o.comment_id === reply_to_id) {\n                        respondent = o.nickname;\n                    }\n                });\n                return respondent;\n            },\n        },\n        mounted() {\n            this.get_hot_article();\n            setTimeout(() => {\n                this.get_comment();\n            }, 1000);\n        },\n    };\n</script>\n\n<style scoped>\n\n    .card {\n        border-radius: 0.5rem;\n    }\n\n    .list_hot {\n      color: white;\n      background-color: var(--color_primary);\n      margin: 0.5rem;\n      padding: 1rem;\n      border-radius: 0.5rem;\n    }\n\n    .hot_title {\n      height: 4rem;\n      font-size: 1.2rem;\n      font-weight: bold;\n      align-items: center;\n      justify-content: center;\n      display: flex;\n      margin-bottom: 1rem;\n    }\n\n    .form_editor {\n        padding: 10px;\n    }\n\n    .comment_box {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n</style>\n"]}]}